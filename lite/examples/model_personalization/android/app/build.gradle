apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"

    defaultConfig {
        applicationId "org.tensorflow.lite.examples.transfer"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

    aaptOptions {
        noCompress "tflite"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation project(path: ':transfer_api')

    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    // If you want to use custom Keras models from TFLiteTransferConverter
    // Python API, uncomment the following Flex AAR dependency.
    // implementation('org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly') { changing = true }

    // https://developer.android.com/jetpack/androidx/releases/camera
    def camerax_version = "1.0.0-alpha04"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"

    // https://developer.android.com/jetpack/androidx/releases/lifecycle
    def lifecycle_version = '2.1.0-rc01'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'com.google.android.material:material:1.0.0'
}


// The code below downloads a transfer learning model used in the example app automatically.
// Remove it if you are using your own model!

def modelUrl = 'https://storage.googleapis.com/download.tensorflow.org/models/tflite/transfer_learning_mobilenet_v2_100_224x224_quant_softmax_4_sgd.zip'
def modelArchivePath = "${buildDir}/model.zip"
def modelTargetLocation = 'src/main/assets/model'

task downloadModel(type: DefaultTask) {
    doFirst {
        println "Downloading and unpacking the model..."
        mkdir project.buildDir
    }

    doLast {
        ant.mkdir(dir: modelTargetLocation)
        // If you want to use your own models rather than pre-built models,
        // comment out the following three lines.
        ant.get(src: modelUrl, dest: modelArchivePath)
        ant.unzip(src: modelArchivePath, dest: modelTargetLocation)
        ant.delete(file: modelArchivePath)
    }
}

preBuild.dependsOn downloadModel
